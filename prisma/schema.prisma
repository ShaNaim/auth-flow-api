generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique @db.VarChar(100)
  slug         String         @unique @default(uuid())
  password     String         @db.VarChar(255)
  isActive     Boolean        @default(false)
  isVerified   Boolean        @default(false) 
  isBlocked    Boolean        @default(false)
  person       Person?
  createdAt    DateTime       @default(now()) 
  updatedAt    DateTime       @updatedAt      
  RefreshToken RefreshToken[]

  @@index([email])
  @@index([isActive])
  @@index([isBlocked])
}

model Person {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String?
  phone     String   @unique @db.VarChar(20)
  address   Address?
  slug      String   @unique @default(uuid())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt      

  @@index([firstName])
  @@index([phone])
}

model Address {
  id         Int      @id @default(autoincrement())
  personId   Int?     @unique
  person     Person?  @relation(fields: [personId], references: [id])
  slug       String   @unique @default(uuid())
  street     String
  city       String
  postalCode Int
  country    String?
  district   String?
  area       String?
  createdAt  DateTime @default(now()) 
  updatedAt  DateTime @updatedAt      
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    Int
  userAgent String?
  ip        String?
  expiresAt DateTime
  isRevoked Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@index([isRevoked])
  @@map("refresh_tokens")
}
